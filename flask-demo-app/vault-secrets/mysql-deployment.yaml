apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
  - port: 3306
  selector:
    app: mysql
  clusterIP: None
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
data:
  initdb.sql: |
    CREATE DATABASE appdb;
    CREATE TABLE appdb.todo (id INT, content TEXT(256), date_created DATETIME, PRIMARY KEY (id));

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'todo-app'
        vault.hashicorp.com/agent-inject-secret-config: 'secret/data/todoapp/config'
        # Environment variable export template
        vault.hashicorp.com/agent-inject-template-config: |
          {{ with secret "secret/data/todoapp/config" -}}
            export MYSQL_ROOT_PASSWORD="{{ .Data.data.root_password }}"
          {{- end }}
    spec:
      containers:
      - image: mysql:5.6
        name: mysql
        args:
          ['sh', '-c', 'source /vault/secrets/config && <entrypoint script>']
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
        - name: mysql-initdb
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
      - name: mysql-initdb
        configMap:
          name: mysql-initdb-config